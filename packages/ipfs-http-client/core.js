"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
async function some(ipfsClient, configs, skipCheck) {
    let ipfs;
    for (let argv of configs) {
        try {
            ipfs = ipfsClient(...argv);
            if (!skipCheck) {
                await ipfs.id();
            }
            break;
        }
        catch (e) { }
    }
    return ipfs;
}
exports.some = some;
function use(ipfsHttpModule) {
    return async function ipfsClient(...argvs) {
        let [config, ...argv] = argvs;
        if (typeof config === 'undefined' || config === null) {
            let configs = [];
            if (typeof process !== 'undefined' && typeof process.env.IPFS_ADDRESSES_API === 'string') {
                configs.push([process.env.IPFS_ADDRESSES_API, ...argv]);
            }
            configs.push([{ port: '5001' }, ...argv]);
            configs.push([{ port: '5002' }, ...argv]);
            return some(ipfsHttpModule, configs);
        }
        return ipfsHttpModule(config, ...argv);
    };
}
exports.use = use;
exports.default = use;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29yZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImNvcmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFJTyxLQUFLLFVBQVUsSUFBSSxDQUFDLFVBQXlCLEVBQUUsT0FBZ0MsRUFBRSxTQUFtQjtJQUUxRyxJQUFJLElBQXVCLENBQUM7SUFFNUIsS0FBSyxJQUFJLElBQUksSUFBSSxPQUFPLEVBQ3hCO1FBQ0MsSUFDQTtZQUNDLElBQUksR0FBRyxVQUFVLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztZQUMzQixJQUFJLENBQUMsU0FBUyxFQUNkO2dCQUNDLE1BQU0sSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDO2FBQ2hCO1lBQ0QsTUFBTTtTQUNOO1FBQ0QsT0FBTyxDQUFDLEVBQ1IsR0FBRTtLQUNGO0lBRUQsT0FBTyxJQUFJLENBQUE7QUFDWixDQUFDO0FBcEJELG9CQW9CQztBQUVELFNBQWdCLEdBQUcsQ0FBQyxjQUE2QjtJQUVoRCxPQUFPLEtBQUssVUFBVSxVQUFVLENBQUMsR0FBRyxLQUE0QjtRQUUvRCxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLEdBQUcsS0FBSyxDQUFDO1FBRTlCLElBQUksT0FBTyxNQUFNLEtBQUssV0FBVyxJQUFJLE1BQU0sS0FBSyxJQUFJLEVBQ3BEO1lBQ0MsSUFBSSxPQUFPLEdBQTRCLEVBQUUsQ0FBQztZQUUxQyxJQUFJLE9BQU8sT0FBTyxLQUFLLFdBQVcsSUFBSSxPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLEtBQUssUUFBUSxFQUN4RjtnQkFDQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7YUFDeEQ7WUFFRCxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQzFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7WUFFMUMsT0FBTyxJQUFJLENBQUMsY0FBYyxFQUFFLE9BQU8sQ0FBQyxDQUFBO1NBQ3BDO1FBRUQsT0FBTyxjQUFjLENBQUMsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUE7SUFDdkMsQ0FBQyxDQUFBO0FBQ0YsQ0FBQztBQXZCRCxrQkF1QkM7QUFFRCxrQkFBZSxHQUFHLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJSVBGU0NsaWVudEZuV3JhcCwgSUlQRlNDbGllbnRGbiwgSUlQRlNDbGllbnRSZXR1cm4sIElJUEZTQ2xpZW50UGFyYW1ldGVycywgSUlQRlNDbGllbnRBZGRyZXNzZXNVUkwsIElJUEZTQ2xpZW50QWRkcmVzc2VzIH0gZnJvbSAnLi9saWIvdHlwZXMnO1xuXG5leHBvcnQgeyBJSVBGU0NsaWVudEZuV3JhcCwgSUlQRlNDbGllbnRGbiwgSUlQRlNDbGllbnRSZXR1cm4sIElJUEZTQ2xpZW50UGFyYW1ldGVycywgSUlQRlNDbGllbnRBZGRyZXNzZXNVUkwsIElJUEZTQ2xpZW50QWRkcmVzc2VzIH1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNvbWUoaXBmc0NsaWVudDogSUlQRlNDbGllbnRGbiwgY29uZmlnczogSUlQRlNDbGllbnRQYXJhbWV0ZXJzW10sIHNraXBDaGVjaz86IGJvb2xlYW4pOiBQcm9taXNlPElJUEZTQ2xpZW50UmV0dXJuPlxue1xuXHRsZXQgaXBmczogSUlQRlNDbGllbnRSZXR1cm47XG5cblx0Zm9yIChsZXQgYXJndiBvZiBjb25maWdzKVxuXHR7XG5cdFx0dHJ5XG5cdFx0e1xuXHRcdFx0aXBmcyA9IGlwZnNDbGllbnQoLi4uYXJndik7XG5cdFx0XHRpZiAoIXNraXBDaGVjaylcblx0XHRcdHtcblx0XHRcdFx0YXdhaXQgaXBmcy5pZCgpO1xuXHRcdFx0fVxuXHRcdFx0YnJlYWs7XG5cdFx0fVxuXHRcdGNhdGNoIChlKVxuXHRcdHt9XG5cdH1cblxuXHRyZXR1cm4gaXBmc1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlKGlwZnNIdHRwTW9kdWxlOiBJSVBGU0NsaWVudEZuKTogSUlQRlNDbGllbnRGbldyYXBcbntcblx0cmV0dXJuIGFzeW5jIGZ1bmN0aW9uIGlwZnNDbGllbnQoLi4uYXJndnM6IElJUEZTQ2xpZW50UGFyYW1ldGVycyk6IFByb21pc2U8SUlQRlNDbGllbnRSZXR1cm4+XG5cdHtcblx0XHRsZXQgW2NvbmZpZywgLi4uYXJndl0gPSBhcmd2cztcblxuXHRcdGlmICh0eXBlb2YgY29uZmlnID09PSAndW5kZWZpbmVkJyB8fCBjb25maWcgPT09IG51bGwpXG5cdFx0e1xuXHRcdFx0bGV0IGNvbmZpZ3M6IElJUEZTQ2xpZW50UGFyYW1ldGVyc1tdID0gW107XG5cblx0XHRcdGlmICh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHByb2Nlc3MuZW52LklQRlNfQUREUkVTU0VTX0FQSSA9PT0gJ3N0cmluZycpXG5cdFx0XHR7XG5cdFx0XHRcdGNvbmZpZ3MucHVzaChbcHJvY2Vzcy5lbnYuSVBGU19BRERSRVNTRVNfQVBJLCAuLi5hcmd2XSk7XG5cdFx0XHR9XG5cblx0XHRcdGNvbmZpZ3MucHVzaChbeyBwb3J0OiAnNTAwMScgfSwgLi4uYXJndl0pO1xuXHRcdFx0Y29uZmlncy5wdXNoKFt7IHBvcnQ6ICc1MDAyJyB9LCAuLi5hcmd2XSk7XG5cblx0XHRcdHJldHVybiBzb21lKGlwZnNIdHRwTW9kdWxlLCBjb25maWdzKVxuXHRcdH1cblxuXHRcdHJldHVybiBpcGZzSHR0cE1vZHVsZShjb25maWcsIC4uLmFyZ3YpXG5cdH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgdXNlXG4iXX0=