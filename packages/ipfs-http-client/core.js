"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
async function some(ipfsClient, configs) {
    let ipfs;
    for (let argv of configs) {
        try {
            // @ts-ignore
            ipfs = ipfsClient(...argv);
            await ipfs.id();
            break;
        }
        catch (e) { }
    }
    return ipfs;
}
exports.some = some;
function use(ipfsHttpModule) {
    return async function ipfsClient(...argvs) {
        let [config, ...argv] = argvs;
        if (typeof config === 'undefined' || config === null) {
            let configs = [];
            if (typeof process !== 'undefined' && typeof process.env.IPFS_ADDRESSES_API === 'string') {
                configs.push([process.env.IPFS_ADDRESSES_API, ...argv]);
            }
            configs.push([{ port: '5001' }, ...argv]);
            configs.push([{ port: '5002' }, ...argv]);
            return some(ipfsHttpModule, configs);
        }
        return ipfsHttpModule(config, ...argv);
    };
}
exports.use = use;
exports.default = use;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29yZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImNvcmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFPTyxLQUFLLFVBQVUsSUFBSSxDQUFDLFVBQXlCLEVBQUUsT0FBZ0M7SUFFckYsSUFBSSxJQUF1QixDQUFDO0lBRTVCLEtBQUssSUFBSSxJQUFJLElBQUksT0FBTyxFQUN4QjtRQUNDLElBQ0E7WUFDQyxhQUFhO1lBQ2IsSUFBSSxHQUFHLFVBQVUsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO1lBQzNCLE1BQU0sSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDO1lBQ2hCLE1BQU07U0FDTjtRQUNELE9BQU8sQ0FBQyxFQUNSLEdBQUU7S0FDRjtJQUVELE9BQU8sSUFBSSxDQUFBO0FBQ1osQ0FBQztBQWxCRCxvQkFrQkM7QUFFRCxTQUFnQixHQUFHLENBQUMsY0FBNkI7SUFFaEQsT0FBTyxLQUFLLFVBQVUsVUFBVSxDQUFDLEdBQUcsS0FBNEI7UUFFL0QsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQztRQUU5QixJQUFJLE9BQU8sTUFBTSxLQUFLLFdBQVcsSUFBSSxNQUFNLEtBQUssSUFBSSxFQUNwRDtZQUNDLElBQUksT0FBTyxHQUF5QyxFQUFFLENBQUM7WUFFdkQsSUFBSSxPQUFPLE9BQU8sS0FBSyxXQUFXLElBQUksT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixLQUFLLFFBQVEsRUFDeEY7Z0JBQ0MsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO2FBQ3hEO1lBRUQsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUMxQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBRTFDLE9BQU8sSUFBSSxDQUFDLGNBQWMsRUFBRSxPQUFPLENBQUMsQ0FBQTtTQUNwQztRQUVELE9BQU8sY0FBYyxDQUFDLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFBO0lBQ3ZDLENBQUMsQ0FBQTtBQUNGLENBQUM7QUF2QkQsa0JBdUJDO0FBRUQsa0JBQWUsR0FBRyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9pcGZzSHR0cE1vZHVsZSBmcm9tICdpcGZzLWh0dHAtY2xpZW50J1xuXG5leHBvcnQgdHlwZSBJSVBGU0NsaWVudFBhcmFtZXRlcnMgPSBQYXJhbWV0ZXJzPHR5cGVvZiBfaXBmc0h0dHBNb2R1bGU+XG5leHBvcnQgdHlwZSBJSVBGU0NsaWVudFJldHVybiA9IFJldHVyblR5cGU8dHlwZW9mIF9pcGZzSHR0cE1vZHVsZT5cbmV4cG9ydCB0eXBlIElJUEZTQ2xpZW50Rm4gPSAoLi4uYXJndnM6IElJUEZTQ2xpZW50UGFyYW1ldGVycykgPT4gSUlQRlNDbGllbnRSZXR1cm5cbmV4cG9ydCB0eXBlIElJUEZTQ2xpZW50Rm5XcmFwID0gKC4uLmFyZ3ZzOiBJSVBGU0NsaWVudFBhcmFtZXRlcnMpID0+IFByb21pc2U8SUlQRlNDbGllbnRSZXR1cm4+XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzb21lKGlwZnNDbGllbnQ6IElJUEZTQ2xpZW50Rm4sIGNvbmZpZ3M6IElJUEZTQ2xpZW50UGFyYW1ldGVyc1tdKTogUHJvbWlzZTxJSVBGU0NsaWVudFJldHVybj5cbntcblx0bGV0IGlwZnM6IElJUEZTQ2xpZW50UmV0dXJuO1xuXG5cdGZvciAobGV0IGFyZ3Ygb2YgY29uZmlncylcblx0e1xuXHRcdHRyeVxuXHRcdHtcblx0XHRcdC8vIEB0cy1pZ25vcmVcblx0XHRcdGlwZnMgPSBpcGZzQ2xpZW50KC4uLmFyZ3YpO1xuXHRcdFx0YXdhaXQgaXBmcy5pZCgpO1xuXHRcdFx0YnJlYWs7XG5cdFx0fVxuXHRcdGNhdGNoIChlKVxuXHRcdHt9XG5cdH1cblxuXHRyZXR1cm4gaXBmc1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlKGlwZnNIdHRwTW9kdWxlOiBJSVBGU0NsaWVudEZuKTogSUlQRlNDbGllbnRGbldyYXBcbntcblx0cmV0dXJuIGFzeW5jIGZ1bmN0aW9uIGlwZnNDbGllbnQoLi4uYXJndnM6IElJUEZTQ2xpZW50UGFyYW1ldGVycyk6IFByb21pc2U8SUlQRlNDbGllbnRSZXR1cm4+XG5cdHtcblx0XHRsZXQgW2NvbmZpZywgLi4uYXJndl0gPSBhcmd2cztcblxuXHRcdGlmICh0eXBlb2YgY29uZmlnID09PSAndW5kZWZpbmVkJyB8fCBjb25maWcgPT09IG51bGwpXG5cdFx0e1xuXHRcdFx0bGV0IGNvbmZpZ3M6IFBhcmFtZXRlcnM8dHlwZW9mIF9pcGZzSHR0cE1vZHVsZT5bXSA9IFtdO1xuXG5cdFx0XHRpZiAodHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBwcm9jZXNzLmVudi5JUEZTX0FERFJFU1NFU19BUEkgPT09ICdzdHJpbmcnKVxuXHRcdFx0e1xuXHRcdFx0XHRjb25maWdzLnB1c2goW3Byb2Nlc3MuZW52LklQRlNfQUREUkVTU0VTX0FQSSwgLi4uYXJndl0pO1xuXHRcdFx0fVxuXG5cdFx0XHRjb25maWdzLnB1c2goW3sgcG9ydDogJzUwMDEnIH0sIC4uLmFyZ3ZdKTtcblx0XHRcdGNvbmZpZ3MucHVzaChbeyBwb3J0OiAnNTAwMicgfSwgLi4uYXJndl0pO1xuXG5cdFx0XHRyZXR1cm4gc29tZShpcGZzSHR0cE1vZHVsZSwgY29uZmlncylcblx0XHR9XG5cblx0XHRyZXR1cm4gaXBmc0h0dHBNb2R1bGUoY29uZmlnLCAuLi5hcmd2KVxuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHVzZVxuIl19